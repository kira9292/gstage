



entity ValidationStatusUser{
  creation Instant
  expire Instant
  activation Instant
  code String
}




entity AppUser {
  username String required minlength(3) maxlength(50)
  email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
  password String required minlength(8)
  name String required
  firstName String required
  phone String
  formation String
  niveau EducationLevel
  status Boolean
}

entity  Jwt{
  desactive Boolean
  expire Boolean

}

entity Role{
  name ERole
}

entity Service {
  name String required minlength(2)
  description String
}

entity Departement {
  name String required minlength(2)
  description String
}


entity DemandeStage {
  creationDate LocalDate
  internshipType InternshipType
  startDate LocalDate
  endDate LocalDate
  cv Blob
  coverLetter Blob
  status InternshipStatus
  validated Boolean
}

entity EtatPaiement {
  paymentNumber String
  paymentDate LocalDate required
  amount Double required min(0)
  actCode String required
  paymentPhone String required pattern(/^[0-9]{9}$/)
  status PaymentStatus required
  processingDate LocalDate
  comments String
}

entity AttestationPresence {
  startDate LocalDate required
  endDate LocalDate required
  signatureDate LocalDate
  status Boolean
  comments String
}

entity Candidat {
  firstName String required minlength(2)
  lastName String required minlength(2)
  birthDate LocalDate
  nationality String
  birthPlace String
  cni String  unique
  address String
  email String required pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
  phone String required pattern(/^[0-9]{9}$/)
  educationLevel EducationLevel
  school String
}

entity Contrat {
  reference String required unique
  startDate LocalDate required
  endDate LocalDate required
  compensation Double required min(0)
  status ContractStatus required
  assignmentSite String required
  signatureDate LocalDate
  comments String
}

entity AttestationFinStage {
  reference String required unique
  issueDate LocalDate required
  signatureDate LocalDate
  comments String
}

entity Validation {
  validationDate LocalDate required
  status ValidationStatus required
  comments String
  validatedBy String required
}

entity RestaurationStagiaire {
  startDate LocalDate required
  endDate LocalDate required
  status Boolean required
  cardNumber String unique
}

entity BusinessUnit {
  name String required unique
  description String
  code String required unique
}

enum ValidationStatus {
  En_ATTENTE,
  VISE_GWTE,
  VISE_DSP,
  VISE_DRH,
  VISE_DFC,
  VISE_DPC,
  VISE_DFCFIN,
  VISE_OFMS,
  COMPLETE
}

enum PaymentStatus {
  EN_ATTENTE,
  EN_COURS,
  PAYE,
  REJETE
}

enum InternshipStatus {
  EN_ATTENTE,
  ACCEPTE,
  REFUSE,
  TERMINER,
  EN_COURS

}

enum ContractStatus {
  EN_PREPARATION,
  EN_SIGNATURE,
  SIGNE,
  TERMINE,
  RESILIE
}

enum CandidateStatus {
  EN_ATTENTE,
  ACCEPTE,
  REFUSE,
  ACTIF,
  INACTIF
}

enum InternshipType {
  ACADEMIQUE,
  PROFESSIONNEL,
  PROJET_FIN_ETUDES
}

enum EducationLevel {
  BAC,
  BAC_PLUS_2,
  BAC_PLUS_3,
  BAC_PLUS_4,
  BAC_PLUS_5
}

enum ERole{
  ADMIN,
  MANAGER,
  RH,
  STAGIAIRE,
  DFC
}

relationship OneToMany {
  AttestationPresence{validations} to Validation{attestationPresence}
    AppUser to EtatPaiement
  AppUser to Contrat
    AppUser to DemandeStage
 AppUser to AttestationPresence
   AppUser to Candidat
    Contrat{validations} to Validation{contrat}
  AttestationFinStage{validations} to Validation{attestationFinStage}
    AppUser{validations} to Validation{user}
    Departement{services} to Service{departemen}
  Departement{demandeStages} to DemandeStage{departement}
    BusinessUnit{demandeStages} to DemandeStage{businessUnit}
}

relationship OneToOne {
  DemandeStage{candidat} to Candidat{demandeStage}
    AppUser to Service
  AppUser{attestationFinStage} to AttestationFinStage{appuser}
  ValidationStatusUser to AppUser
}

relationship ManyToOne {
    Service{businessUnit} to BusinessUnit
    RestaurationStagiaire to AppUser
    AppUser to Role
    Jwt to AppUser
}


// Options pour l'application
paginate * with pagination
service AppUser with serviceClass

