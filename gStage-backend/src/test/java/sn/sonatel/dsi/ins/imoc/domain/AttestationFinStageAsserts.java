package sn.sonatel.dsi.ins.imoc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AttestationFinStageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttestationFinStageAllPropertiesEquals(AttestationFinStage expected, AttestationFinStage actual) {
        assertAttestationFinStageAutoGeneratedPropertiesEquals(expected, actual);
        assertAttestationFinStageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttestationFinStageAllUpdatablePropertiesEquals(AttestationFinStage expected, AttestationFinStage actual) {
        assertAttestationFinStageUpdatableFieldsEquals(expected, actual);
        assertAttestationFinStageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttestationFinStageAutoGeneratedPropertiesEquals(AttestationFinStage expected, AttestationFinStage actual) {
        assertThat(expected)
            .as("Verify AttestationFinStage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttestationFinStageUpdatableFieldsEquals(AttestationFinStage expected, AttestationFinStage actual) {
        assertThat(expected)
            .as("Verify AttestationFinStage relevant properties")
            .satisfies(e -> assertThat(e.getReference()).as("check reference").isEqualTo(actual.getReference()))
            .satisfies(e -> assertThat(e.getIssueDate()).as("check issueDate").isEqualTo(actual.getIssueDate()))
            .satisfies(e -> assertThat(e.getSignatureDate()).as("check signatureDate").isEqualTo(actual.getSignatureDate()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAttestationFinStageUpdatableRelationshipsEquals(AttestationFinStage expected, AttestationFinStage actual) {
        // empty method
    }
}
