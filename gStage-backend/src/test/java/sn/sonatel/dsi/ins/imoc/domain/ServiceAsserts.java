package sn.sonatel.dsi.ins.imoc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ServiceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceAllPropertiesEquals(Service expected, Service actual) {
        assertServiceAutoGeneratedPropertiesEquals(expected, actual);
        assertServiceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceAllUpdatablePropertiesEquals(Service expected, Service actual) {
        assertServiceUpdatableFieldsEquals(expected, actual);
        assertServiceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceAutoGeneratedPropertiesEquals(Service expected, Service actual) {
        assertThat(expected)
            .as("Verify Service auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceUpdatableFieldsEquals(Service expected, Service actual) {
        assertThat(expected)
            .as("Verify Service relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertServiceUpdatableRelationshipsEquals(Service expected, Service actual) {
        assertThat(expected)
            .as("Verify Service relationships")
            .satisfies(e -> assertThat(e.getBusinessUnit()).as("check businessUnit").isEqualTo(actual.getBusinessUnit()))
            .satisfies(e -> assertThat(e.getDepartemen()).as("check departemen").isEqualTo(actual.getDepartemen()));
    }
}
