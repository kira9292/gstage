package sn.sonatel.dsi.ins.imoc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ValidationStatusUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationStatusUserAllPropertiesEquals(ValidationStatusUser expected, ValidationStatusUser actual) {
        assertValidationStatusUserAutoGeneratedPropertiesEquals(expected, actual);
        assertValidationStatusUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationStatusUserAllUpdatablePropertiesEquals(ValidationStatusUser expected, ValidationStatusUser actual) {
        assertValidationStatusUserUpdatableFieldsEquals(expected, actual);
        assertValidationStatusUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationStatusUserAutoGeneratedPropertiesEquals(ValidationStatusUser expected, ValidationStatusUser actual) {
        assertThat(expected)
            .as("Verify ValidationStatusUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationStatusUserUpdatableFieldsEquals(ValidationStatusUser expected, ValidationStatusUser actual) {
        assertThat(expected)
            .as("Verify ValidationStatusUser relevant properties")
            .satisfies(e -> assertThat(e.getCreation()).as("check creation").isEqualTo(actual.getCreation()))
            .satisfies(e -> assertThat(e.getExpire()).as("check expire").isEqualTo(actual.getExpire()))
            .satisfies(e -> assertThat(e.getActivation()).as("check activation").isEqualTo(actual.getActivation()))
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationStatusUserUpdatableRelationshipsEquals(ValidationStatusUser expected, ValidationStatusUser actual) {
        assertThat(expected)
            .as("Verify ValidationStatusUser relationships")
            .satisfies(e -> assertThat(e.getAppUser()).as("check appUser").isEqualTo(actual.getAppUser()));
    }
}
