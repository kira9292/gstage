package sn.sonatel.dsi.ins.imoc.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ValidationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationAllPropertiesEquals(Validation expected, Validation actual) {
        assertValidationAutoGeneratedPropertiesEquals(expected, actual);
        assertValidationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationAllUpdatablePropertiesEquals(Validation expected, Validation actual) {
        assertValidationUpdatableFieldsEquals(expected, actual);
        assertValidationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationAutoGeneratedPropertiesEquals(Validation expected, Validation actual) {
        assertThat(expected)
            .as("Verify Validation auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationUpdatableFieldsEquals(Validation expected, Validation actual) {
        assertThat(expected)
            .as("Verify Validation relevant properties")
            .satisfies(e -> assertThat(e.getValidationDate()).as("check validationDate").isEqualTo(actual.getValidationDate()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()))
            .satisfies(e -> assertThat(e.getValidatedBy()).as("check validatedBy").isEqualTo(actual.getValidatedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidationUpdatableRelationshipsEquals(Validation expected, Validation actual) {
        assertThat(expected)
            .as("Verify Validation relationships")
            .satisfies(e ->
                assertThat(e.getAttestationPresence()).as("check attestationPresence").isEqualTo(actual.getAttestationPresence())
            )
            .satisfies(e -> assertThat(e.getContrat()).as("check contrat").isEqualTo(actual.getContrat()))
            .satisfies(e ->
                assertThat(e.getAttestationFinStage()).as("check attestationFinStage").isEqualTo(actual.getAttestationFinStage())
            )
            .satisfies(e -> assertThat(e.getUser()).as("check user").isEqualTo(actual.getUser()));
    }
}
